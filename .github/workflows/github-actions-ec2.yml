name: Push-to-EC2

# Trigger deployment only on push to master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      REMOTE_HOST: ${{ secrets.HOST_DNS }}
      REMOTE_USER: ${{ secrets.USERNAME }}
      TARGET: ${{ secrets.TARGET_DIR }}
      FLASK_ENV: ${{ secrets.FLASK_ENV }}
      FLASK_APP: ${{ secrets.FLASK_APP }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to EC2 Server
        uses: easingthemes/ssh-deploy@main

      - name: AWS SSM Send-Command
        uses: peterkimzz/aws-ssm-send-command@master
        id: ssm
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          instance-ids: ${{ secrets.INSTANCE_ID }}

          working-directory: /home/ubuntu/application
          command: docker-compose -f docker-compose.prod.yml up -d --build
          comment: Building an run docker containers

      # Catch SSM outputs
      - name: Get the outputs
        run: echo "The Command id is ${{ steps.ssm.outputs.command-id }}"

      # - name: Start containers
      #   run: docker-compose -f docker-compose.prod.yml up -d --build
